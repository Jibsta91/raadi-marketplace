// Browse Page JavaScript - Enhanced Marketplace Functionalitydocument.addEventListener('DOMContentLoaded', function() {    console.log('Browse page loaded');        // Initialize browse page functionality    initializeFilters();    initializeViewToggle();    initializeListings();    initializeFavorites();    initializeLoadMore();});// Filter functionalityfunction initializeFilters() {    const filterSelects = document.querySelectorAll('.filter-select');    const sortSelect = document.querySelector('.sort-select');    const filterToggle = document.querySelector('.filter-toggle');    const searchInput = document.querySelector('.search-input-large');        // Handle filter changes    filterSelects.forEach(select => {        select.addEventListener('change', function() {            applyFilters();        });    });        // Handle sort changes    if (sortSelect) {        sortSelect.addEventListener('change', function() {            sortListings(this.value);        });    }        // Handle advanced filters toggle    if (filterToggle) {        filterToggle.addEventListener('click', function() {            showAdvancedFilters();        });    }        // Handle search input    if (searchInput) {        let searchTimeout;        searchInput.addEventListener('input', function() {            clearTimeout(searchTimeout);            searchTimeout = setTimeout(() => {                performSearch(this.value);            }, 500);        });    }}function applyFilters() {    const filters = {        category: document.querySelector('.filter-select').value,        priceRange: document.querySelectorAll('.filter-select')[1]?.value || '',        location: document.querySelectorAll('.filter-select')[2]?.value || ''    };        console.log('Applying filters:', filters);        // Filter listings    const listings = document.querySelectorAll('.listing-card');    let visibleCount = 0;        listings.forEach(listing => {        const shouldShow = matchesFilters(listing, filters);        listing.style.display = shouldShow ? 'block' : 'none';        if (shouldShow) visibleCount++;    });        // Update results count    updateResultsCount(visibleCount);        // Show notification    if (window.RaadiMarketplace) {        window.RaadiMarketplace.showNotification(            `Filtrert resultater: ${visibleCount} annonser funnet`,            'info'        );    }}function matchesFilters(listing, filters) {    // Simple mock filtering - in a real app, this would use data attributes or API calls    const title = listing.querySelector('.listing-title')?.textContent.toLowerCase() || '';    const price = parsePrice(listing.querySelector('.listing-price')?.textContent || '');    const location = listing.querySelector('.listing-location')?.textContent.toLowerCase() || '';        // Category filter    if (filters.category) {        const categoryKeywords = {            'torget': ['iphone', 'macbook', 'gaming'],            'bil': ['toyota', 'tesla'],            'mc': ['yamaha'],            'eiendom': ['leilighet', 'hytte']        };                const keywords = categoryKeywords[filters.category] || [];        if (!keywords.some(keyword => title.includes(keyword))) {            return false;        }    }        // Price range filter    if (filters.priceRange) {        const [min, max] = filters.priceRange.split('-').map(p => parseInt(p) || 0);        if (max && price > max) return false;        if (min && price < min) return false;    }        // Location filter    if (filters.location && !location.includes(filters.location)) {        return false;    }        return true;}function parsePrice(priceText) {    return parseInt(priceText.replace(/[^\d]/g, '')) || 0;}function sortListings(sortBy) {    const container = document.querySelector('.listings-grid');    const listings = Array.from(container.querySelectorAll('.listing-card'));        listings.sort((a, b) => {        switch (sortBy) {            case 'newest':                return compareByDate(a, b);            case 'price-low':                return compareByPrice(a, b);            case 'price-high':                return compareByPrice(a, b, true);            case 'distance':                return compareByDistance(a, b);            default: // relevance                return 0;        }    });        // Re-append sorted elements    listings.forEach(listing => container.appendChild(listing));        // Show notification    if (window.RaadiMarketplace) {        const sortLabels = {            'newest': 'nyeste f√∏rst',            'price-low': 'lavest pris',            'price-high': 'h√∏yest pris',            'distance': 'avstand',            'relevance': 'relevans'        };                window.RaadiMarketplace.showNotification(            `Sortert etter ${sortLabels[sortBy]}`,            'info'        );    }}function compareByDate(a, b) {    const timeA = parseTimeAgo(a.querySelector('.listing-date')?.textContent || '');    const timeB = parseTimeAgo(b.querySelector('.listing-date')?.textContent || '');    return timeA - timeB; // Newest first}function compareByPrice(a, b, descending = false) {    const priceA = parsePrice(a.querySelector('.listing-price')?.textContent || '');    const priceB = parsePrice(b.querySelector('.listing-price')?.textContent || '');    return descending ? priceB - priceA : priceA - priceB;}function compareByDistance(a, b) {    // Mock distance comparison - in real app, would use geolocation    return Math.random() - 0.5;}function parseTimeAgo(timeText) {    // Convert "X timer siden" to hours for comparison    const hours = parseInt(timeText) || 0;    return hours;}// View toggle functionalityfunction initializeViewToggle() {    const viewButtons = document.querySelectorAll('.view-btn');    const listingsGrid = document.querySelector('.listings-grid');        viewButtons.forEach(btn => {        btn.addEventListener('click', function() {            const view = this.dataset.view;                        // Update active button            viewButtons.forEach(b => b.classList.remove('active'));            this.classList.add('active');                        // Toggle view            if (view === 'list') {                listingsGrid.classList.add('list-view');            } else {                listingsGrid.classList.remove('list-view');            }                        // Save preference            localStorage.setItem('preferredView', view);        });    });        // Load saved preference    const savedView = localStorage.getItem('preferredView');    if (savedView === 'list') {        document.querySelector('[data-view="list"]')?.click();    }}// Listings interactionfunction initializeListings() {    const listings = document.querySelectorAll('.listing-card');        listings.forEach(listing => {        // Add click handler for viewing details        listing.addEventListener('click', function(e) {            // Don't trigger if clicking favorite button            if (e.target.closest('.favorite-btn')) return;                        const title = this.querySelector('.listing-title')?.textContent;            showListingDetails(title);        });                // Add keyboard navigation        listing.setAttribute('tabindex', '0');        listing.addEventListener('keydown', function(e) {            if (e.key === 'Enter' || e.key === ' ') {                e.preventDefault();                this.click();            }        });    });}function showListingDetails(title) {    // Mock listing details modal    if (window.RaadiMarketplace) {        const modal = `            <div class="modal-header">                <h2>${title}</h2>                <button class="modal-close" aria-label="Lukk">&times;</button>            </div>            <div class="modal-body">                <p>Her vil detaljert informasjon om annonsen vises.</p>                <div class="listing-details">                    <h3>Beskrivelse</h3>                    <p>Detaljert beskrivelse av produktet eller tjenesten...</p>                                        <h3>Kontaktinformasjon</h3>                    <p>üìß E-post: selger@example.com</p>                    <p>üì± Telefon: +47 12 34 56 78</p>                </div>                <div class="modal-actions">                    <button class="btn-primary">Kontakt selger</button>                    <button class="btn-secondary">Del annonse</button>                </div>            </div>        `;                const modalElement = createModal(modal);        document.body.appendChild(modalElement);                // Focus management        setTimeout(() => {            modalElement.querySelector('.modal-close').focus();        }, 100);    }}// Favorites functionalityfunction initializeFavorites() {    const favoriteButtons = document.querySelectorAll('.favorite-btn');        favoriteButtons.forEach(btn => {        btn.addEventListener('click', function(e) {            e.stopPropagation(); // Prevent listing click                        const listingCard = this.closest('.listing-card');            const title = listingCard.querySelector('.listing-title')?.textContent;                        toggleFavorite(this, title);        });    });        // Load saved favorites    loadFavorites();}function toggleFavorite(button, title) {    const isFavorited = button.classList.contains('favorited');        if (isFavorited) {        button.classList.remove('favorited');        button.textContent = '‚ô°';        removeFavorite(title);                if (window.RaadiMarketplace) {            window.RaadiMarketplace.showNotification(                `Fjernet "${title}" fra favoritter`,                'info'            );        }    } else {        button.classList.add('favorited');        button.textContent = '‚ù§Ô∏è';        addFavorite(title);                if (window.RaadiMarketplace) {            window.RaadiMarketplace.showNotification(                `Lagt til "${title}" i favoritter`,                'success'            );        }    }}function addFavorite(title) {    const favorites = getFavorites();    if (!favorites.includes(title)) {        favorites.push(title);        localStorage.setItem('favorites', JSON.stringify(favorites));    }}function removeFavorite(title) {    const favorites = getFavorites();    const index = favorites.indexOf(title);    if (index > -1) {        favorites.splice(index, 1);        localStorage.setItem('favorites', JSON.stringify(favorites));    }}function getFavorites() {    try {        return JSON.parse(localStorage.getItem('favorites') || '[]');    } catch {        return [];    }}function loadFavorites() {    const favorites = getFavorites();        document.querySelectorAll('.listing-card').forEach(card => {        const title = card.querySelector('.listing-title')?.textContent;        const favoriteBtn = card.querySelector('.favorite-btn');                if (favorites.includes(title) && favoriteBtn) {            favoriteBtn.classList.add('favorited');            favoriteBtn.textContent = '‚ù§Ô∏è';        }    });}// Load more functionalityfunction initializeLoadMore() {    const loadMoreBtn = document.getElementById('load-more-btn');        if (loadMoreBtn) {        loadMoreBtn.addEventListener('click', function() {            loadMoreListings();        });    }}function loadMoreListings() {    const loadMoreBtn = document.getElementById('load-more-btn');    const container = document.querySelector('.listings-grid');        // Show loading state    loadMoreBtn.textContent = 'Laster...';    loadMoreBtn.disabled = true;        // Simulate API call    setTimeout(() => {        const newListings = generateMockListings(6);        container.insertAdjacentHTML('beforeend', newListings);                // Re-initialize new listings        const newCards = container.querySelectorAll('.listing-card:not([data-initialized])');        newCards.forEach(card => {            card.setAttribute('data-initialized', 'true');            initializeListingCard(card);        });                // Update button        loadMoreBtn.textContent = 'Last inn flere annonser';        loadMoreBtn.disabled = false;                // Update results count        const totalListings = container.querySelectorAll('.listing-card').length;        updateResultsCount(totalListings);                if (window.RaadiMarketplace) {            window.RaadiMarketplace.showNotification(                'Lastet inn 6 nye annonser',                'success'            );        }    }, 1500);}function generateMockListings(count) {    const mockData = [        {            title: 'Samsung Galaxy S23 Ultra',            price: '8999',            location: 'Kristiansand',            image: 'Samsung+Galaxy+S23',            description: 'Ny Samsung Galaxy S23 Ultra i original emballasje. Aldri brukt.',            time: '30 minutter siden',            views: '12'        },        {            title: 'BMW X5 2021 - Topputstyrt',            price: '650000',            location: 'Troms√∏',            image: 'BMW+X5',            description: 'BMW X5 med full service og EU-godkjenning. Perfekt stand.',            time: '1 time siden',            views: '45'        },        {            title: 'Villa med sj√∏utsikt - Stavanger',            price: '7200000',            location: 'Stavanger',            image: 'Villa+Stavanger',            description: 'Eksklusiv villa med panoramautsikt over fjorden.',            time: '2 timer siden',            views: '78'        },        {            title: 'Nintendo Switch OLED',            price: '2299',            location: 'Fredrikstad',            image: 'Nintendo+Switch',            description: 'Nintendo Switch OLED med flere spill inkludert.',            time: '3 timer siden',            views: '23'        },        {            title: 'Harley Davidson Street 750',            price: '89000',            location: '√Ölesund',            image: 'Harley+Davidson',            description: 'Harley Davidson i utmerket stand. Lite kj√∏rt.',            time: '4 timer siden',            views: '67'        },        {            title: 'Dell XPS 13 - Ultrabook',            price: '12500',            location: 'Bod√∏',            image: 'Dell+XPS+13',            description: 'Tynn og lett ultrabook perfekt for arbeid og studie.',            time: '5 timer siden',            views: '34'        }    ];        return mockData.slice(0, count).map(item => `        <article class="listing-card">            <div class="listing-image">                <img src="https://via.placeholder.com/300x200?text=${item.image}" alt="${item.title}">                <button class="favorite-btn" aria-label="Legg til favoritter">‚ô°</button>            </div>            <div class="listing-content">                <h3 class="listing-title">${item.title}</h3>                <p class="listing-price">${parseInt(item.price).toLocaleString('no-NO')} kr</p>                <p class="listing-location">üìç ${item.location}, Norge</p>                <p class="listing-description">${item.description}</p>                <div class="listing-meta">                    <span class="listing-date">${item.time}</span>                    <span class="listing-views">üëÅ ${item.views} visninger</span>                </div>            </div>        </article>    `).join('');}function initializeListingCard(card) {    // Add click handler    card.addEventListener('click', function(e) {        if (e.target.closest('.favorite-btn')) return;                const title = this.querySelector('.listing-title')?.textContent;        showListingDetails(title);    });        // Add keyboard navigation    card.setAttribute('tabindex', '0');    card.addEventListener('keydown', function(e) {        if (e.key === 'Enter' || e.key === ' ') {            e.preventDefault();            this.click();        }    });        // Initialize favorite button    const favoriteBtn = card.querySelector('.favorite-btn');    if (favoriteBtn) {        favoriteBtn.addEventListener('click', function(e) {            e.stopPropagation();                        const title = card.querySelector('.listing-title')?.textContent;            toggleFavorite(this, title);        });    }}// Advanced filters modalfunction showAdvancedFilters() {    const modal = `        <div class="modal-header">            <h2>Avanserte filtre</h2>            <button class="modal-close" aria-label="Lukk">&times;</button>        </div>        <div class="modal-body">            <div class="filter-group">                <h3>Tilstand</h3>                <label><input type="checkbox" value="new"> Ny</label>                <label><input type="checkbox" value="used"> Brukt</label>                <label><input type="checkbox" value="refurbished"> Renovert</label>            </div>                        <div class="filter-group">                <h3>Prisklasse</h3>                <input type="range" min="0" max="1000000" step="1000" class="price-range">                <div class="price-display">0 kr - 1.000.000 kr</div>            </div>                        <div class="filter-group">                <h3>Avstand</h3>                <select class="filter-select">                    <option value="">Hele landet</option>                    <option value="10">Innen 10 km</option>                    <option value="25">Innen 25 km</option>                    <option value="50">Innen 50 km</option>                    <option value="100">Innen 100 km</option>                </select>            </div>                        <div class="modal-actions">                <button class="btn-primary">Bruk filtre</button>                <button class="btn-secondary">Nullstill</button>            </div>        </div>    `;        if (window.RaadiMarketplace) {        const modalElement = createModal(modal);        document.body.appendChild(modalElement);                // Focus management        setTimeout(() => {            modalElement.querySelector('.modal-close').focus();        }, 100);    }}// Utility functionsfunction createModal(content) {    const modal = document.createElement('div');    modal.className = 'modal-overlay';    modal.innerHTML = `        <div class="modal-content" role="dialog" aria-modal="true">            ${content}        </div>    `;    return modal;}function updateResultsCount(count) {    const resultsCount = document.querySelector('.results-count');    if (resultsCount) {        const total = document.querySelectorAll('.listing-card').length;        resultsCount.textContent = `Viser 1-${Math.min(20, count)} av ${total} annonser`;    }}function performSearch(query) {    if (!query.trim()) return;        console.log('Searching for:', query);        // Simple text-based search in listing titles and descriptions    const listings = document.querySelectorAll('.listing-card');    let visibleCount = 0;        listings.forEach(listing => {        const title = listing.querySelector('.listing-title')?.textContent.toLowerCase() || '';        const description = listing.querySelector('.listing-description')?.textContent.toLowerCase() || '';        const searchTerm = query.toLowerCase();                const matches = title.includes(searchTerm) || description.includes(searchTerm);        listing.style.display = matches ? 'block' : 'none';        if (matches) visibleCount++;    });        updateResultsCount(visibleCount);        if (window.RaadiMarketplace) {        window.RaadiMarketplace.showNotification(            `S√∏ket gav ${visibleCount} resultater for "${query}"`,            visibleCount > 0 ? 'success' : 'warning'        );    }}